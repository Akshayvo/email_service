{"version":3,"sources":["ng://angulartics2/amplitude/amplitude.ts"],"names":["Angulartics2Amplitude","angulartics2","_this","this","pageTrack","pipe","filterDeveloperMode","subscribe","x","path","eventTrack","action","properties","setUsername","setUserProperties","setUserPropertiesOnce","prototype","url","e","ReferenceError","amplitude","getInstance","logEvent","userId","setUserId","Injectable","Angulartics2"],"mappings":"mXAAA,IAAAA,EAAA,WAeE,SAAAA,EAAoBC,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,aAAAA,EAClBE,KAAKF,aAAaG,UACfC,KAAKF,KAAKF,aAAaK,uBACvBC,UAAU,SAACC,GAAW,OAAAN,EAAKE,UAAUI,EAAEC,QAC1CN,KAAKF,aAAaS,WACfL,KAAKF,KAAKF,aAAaK,uBACvBC,UAAU,SAACC,GAAW,OAAAN,EAAKQ,WAAWF,EAAEG,OAAQH,EAAEI,cACrDT,KAAKF,aAAaY,YACfN,UAAU,SAACC,GAAW,OAAAN,EAAKW,YAAYL,KAC1CL,KAAKF,aAAaa,kBACfP,UAAU,SAACC,GAAW,OAAAN,EAAKY,kBAAkBN,KAChDL,KAAKF,aAAac,sBACfR,UAAU,SAACC,GAAW,OAAAN,EAAKY,kBAAkBN,YAGlDR,EAAAgB,UAAAZ,UAAA,SAAUK,GACR,IACEN,KAAKO,WAAW,WAAY,CAC1BO,IAAKR,IAEP,MAAOS,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZlB,EAAAgB,UAAAN,WAAA,SAAWC,EAAgBC,GACzB,IACEQ,UAAUC,cAAcC,SAASX,EAAQC,GACzC,MAAOM,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZlB,EAAAgB,UAAAH,YAAA,SAAYU,GACV,IACEH,UAAUC,cAAcG,UAAUD,GAClC,MAAOL,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZlB,EAAAgB,UAAAF,kBAAA,SAAkBF,GAChB,IACEQ,UAAUC,cAAcP,kBAAkBF,GAC1C,MAAOM,GACP,KAAMA,aAAaC,gBACjB,MAAMD,wBAvDbO,EAAAA,sDAVQC,EAAAA,kBAFT","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var amplitude: {\n  getInstance: () => {\n    logEvent(action: string, properties: any);\n    setUserId(userId: string);\n    setUserProperties(properties: any);\n  }\n};\n\n@Injectable()\nexport class Angulartics2Amplitude {\n\n  constructor(private angulartics2: Angulartics2) {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.setUsername\n      .subscribe((x: any) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x: any) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x: any) => this.setUserProperties(x));\n  }\n\n  pageTrack(path: string) {\n    try {\n      this.eventTrack('Pageview', {\n        url: path\n      });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      amplitude.getInstance().logEvent(action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string) {\n    try {\n      amplitude.getInstance().setUserId(userId);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      amplitude.getInstance().setUserProperties(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n"]}