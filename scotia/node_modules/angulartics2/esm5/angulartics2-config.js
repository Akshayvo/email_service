/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @record
 */
export function GoogleAnalyticsSettings() { }
function GoogleAnalyticsSettings_tsickle_Closure_declarations() {
    /**
     * array of additional account names (only works for analyticsjs)
     * @type {?}
     */
    GoogleAnalyticsSettings.prototype.additionalAccountNames;
    /** @type {?} */
    GoogleAnalyticsSettings.prototype.userId;
    /**
     * see https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport
     * @type {?}
     */
    GoogleAnalyticsSettings.prototype.transport;
    /** @type {?} */
    GoogleAnalyticsSettings.prototype.anonymizeIp;
}
/**
 * @record
 */
export function AppInsightsSettings() { }
function AppInsightsSettings_tsickle_Closure_declarations() {
    /** @type {?} */
    AppInsightsSettings.prototype.userId;
}
/**
 * @record
 */
export function GoogleTagManagerSettings() { }
function GoogleTagManagerSettings_tsickle_Closure_declarations() {
    /** @type {?} */
    GoogleTagManagerSettings.prototype.userId;
}
/**
 * @record
 */
export function GoogleGlobalSiteTagSettings() { }
function GoogleGlobalSiteTagSettings_tsickle_Closure_declarations() {
    /** @type {?} */
    GoogleGlobalSiteTagSettings.prototype.trackingIds;
}
/**
 * @record
 */
export function PageTrackingSettings() { }
function PageTrackingSettings_tsickle_Closure_declarations() {
    /** @type {?} */
    PageTrackingSettings.prototype.autoTrackVirtualPages;
    /** @type {?} */
    PageTrackingSettings.prototype.basePath;
    /** @type {?} */
    PageTrackingSettings.prototype.excludedRoutes;
    /**
     * drop ids from url `/sections/123/pages/456` -> `/sections/pages`
     * @type {?}
     */
    PageTrackingSettings.prototype.clearIds;
    /**
     * drop contents of url after hash marker `/callback#authcode=1234` -> `/callback`
     * @type {?}
     */
    PageTrackingSettings.prototype.clearHash;
    /**
     * drop query params from url `/sections/123/pages?param=456&param2=789` -> `/sections/123/pages`
     * @type {?}
     */
    PageTrackingSettings.prototype.clearQueryParams;
    /**
     * used with clearIds, define the matcher to clear url parts
     * @type {?}
     */
    PageTrackingSettings.prototype.idsRegExp;
}
/**
 * @record
 */
export function Angulartics2Settings() { }
function Angulartics2Settings_tsickle_Closure_declarations() {
    /** @type {?} */
    Angulartics2Settings.prototype.pageTracking;
    /**
     * Disable page tracking
     * @type {?}
     */
    Angulartics2Settings.prototype.developerMode;
    /** @type {?} */
    Angulartics2Settings.prototype.ga;
    /** @type {?} */
    Angulartics2Settings.prototype.appInsights;
    /** @type {?} */
    Angulartics2Settings.prototype.gtm;
    /** @type {?} */
    Angulartics2Settings.prototype.gst;
}
var DefaultConfig = /** @class */ (function () {
    function DefaultConfig() {
        this.pageTracking = {
            autoTrackVirtualPages: true,
            basePath: '',
            excludedRoutes: [],
            clearIds: false,
            clearHash: false,
            clearQueryParams: false,
            idsRegExp: /^\d+$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/,
        };
        this.developerMode = false;
        this.ga = {};
        this.appInsights = {};
        this.gtm = {};
        this.gst = {};
    }
    return DefaultConfig;
}());
export { DefaultConfig };
function DefaultConfig_tsickle_Closure_declarations() {
    /** @type {?} */
    DefaultConfig.prototype.pageTracking;
    /** @type {?} */
    DefaultConfig.prototype.developerMode;
    /** @type {?} */
    DefaultConfig.prototype.ga;
    /** @type {?} */
    DefaultConfig.prototype.appInsights;
    /** @type {?} */
    DefaultConfig.prototype.gtm;
    /** @type {?} */
    DefaultConfig.prototype.gst;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcnRpY3MyLWNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXJ0aWNzMi8iLCJzb3VyY2VzIjpbImFuZ3VsYXJ0aWNzMi1jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2Q0EsSUFBQTs7NEJBQ2lCO1lBQ2IscUJBQXFCLEVBQUUsSUFBSTtZQUMzQixRQUFRLEVBQUUsRUFBRTtZQUNaLGNBQWMsRUFBRSxFQUFFO1lBQ2xCLFFBQVEsRUFBRSxLQUFLO1lBQ2YsU0FBUyxFQUFFLEtBQUs7WUFDaEIsZ0JBQWdCLEVBQUUsS0FBSztZQUN2QixTQUFTLEVBQUUscUZBQXFGO1NBQ2pHOzZCQUNlLEtBQUs7a0JBQ2hCLEVBQUU7MkJBQ08sRUFBRTttQkFDVixFQUFFO21CQUNGLEVBQUU7O3dCQTNEVjtJQTREQyxDQUFBO0FBZkQseUJBZUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIEdvb2dsZUFuYWx5dGljc1NldHRpbmdzIHtcbiAgLyoqIGFycmF5IG9mIGFkZGl0aW9uYWwgYWNjb3VudCBuYW1lcyAob25seSB3b3JrcyBmb3IgYW5hbHl0aWNzanMpICovXG4gIGFkZGl0aW9uYWxBY2NvdW50TmFtZXM6IHN0cmluZ1tdO1xuICB1c2VySWQ6IGFueTtcbiAgLyoqIHNlZSBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9hbmFseXRpY3MvZGV2Z3VpZGVzL2NvbGxlY3Rpb24vYW5hbHl0aWNzanMvZmllbGQtcmVmZXJlbmNlI3RyYW5zcG9ydCAqL1xuICB0cmFuc3BvcnQ6IHN0cmluZztcbiAgYW5vbnltaXplSXA6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBwSW5zaWdodHNTZXR0aW5ncyB7XG4gIHVzZXJJZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdvb2dsZVRhZ01hbmFnZXJTZXR0aW5ncyB7XG4gIHVzZXJJZDogYW55O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdvb2dsZUdsb2JhbFNpdGVUYWdTZXR0aW5ncyB7XG4gIHRyYWNraW5nSWRzOiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFnZVRyYWNraW5nU2V0dGluZ3Mge1xuICBhdXRvVHJhY2tWaXJ0dWFsUGFnZXM6IGJvb2xlYW47XG4gIGJhc2VQYXRoOiBzdHJpbmc7XG4gIGV4Y2x1ZGVkUm91dGVzOiAoc3RyaW5nIHwgUmVnRXhwKVtdO1xuICAvKiogZHJvcCBpZHMgZnJvbSB1cmwgYC9zZWN0aW9ucy8xMjMvcGFnZXMvNDU2YCAtPiBgL3NlY3Rpb25zL3BhZ2VzYCAqL1xuICBjbGVhcklkczogYm9vbGVhbjtcbiAgLyoqIGRyb3AgY29udGVudHMgb2YgdXJsIGFmdGVyIGhhc2ggbWFya2VyIGAvY2FsbGJhY2sjYXV0aGNvZGU9MTIzNGAgLT4gYC9jYWxsYmFja2AgKi9cbiAgY2xlYXJIYXNoOiBib29sZWFuO1xuICAvKiogZHJvcCBxdWVyeSBwYXJhbXMgZnJvbSB1cmwgYC9zZWN0aW9ucy8xMjMvcGFnZXM/cGFyYW09NDU2JnBhcmFtMj03ODlgIC0+IGAvc2VjdGlvbnMvMTIzL3BhZ2VzYCAqL1xuICBjbGVhclF1ZXJ5UGFyYW1zOiBib29sZWFuO1xuICAvKiogdXNlZCB3aXRoIGNsZWFySWRzLCBkZWZpbmUgdGhlIG1hdGNoZXIgdG8gY2xlYXIgdXJsIHBhcnRzICovXG4gIGlkc1JlZ0V4cDogUmVnRXhwO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFuZ3VsYXJ0aWNzMlNldHRpbmdzIHtcbiAgcGFnZVRyYWNraW5nOiBQYXJ0aWFsPFBhZ2VUcmFja2luZ1NldHRpbmdzPjtcbiAgLyoqIERpc2FibGUgcGFnZSB0cmFja2luZyAqL1xuICBkZXZlbG9wZXJNb2RlOiBib29sZWFuO1xuICBnYTogUGFydGlhbDxHb29nbGVBbmFseXRpY3NTZXR0aW5ncz47XG4gIGFwcEluc2lnaHRzOiBQYXJ0aWFsPEFwcEluc2lnaHRzU2V0dGluZ3M+O1xuICBndG06IFBhcnRpYWw8R29vZ2xlVGFnTWFuYWdlclNldHRpbmdzPjtcbiAgZ3N0OiBQYXJ0aWFsPEdvb2dsZUdsb2JhbFNpdGVUYWdTZXR0aW5ncz47XG59XG5cbmV4cG9ydCBjbGFzcyBEZWZhdWx0Q29uZmlnIGltcGxlbWVudHMgQW5ndWxhcnRpY3MyU2V0dGluZ3Mge1xuICBwYWdlVHJhY2tpbmcgPSB7XG4gICAgYXV0b1RyYWNrVmlydHVhbFBhZ2VzOiB0cnVlLFxuICAgIGJhc2VQYXRoOiAnJyxcbiAgICBleGNsdWRlZFJvdXRlczogW10sXG4gICAgY2xlYXJJZHM6IGZhbHNlLFxuICAgIGNsZWFySGFzaDogZmFsc2UsXG4gICAgY2xlYXJRdWVyeVBhcmFtczogZmFsc2UsXG4gICAgaWRzUmVnRXhwOiAvXlxcZCskfF5bMC05YS1mQS1GXXs4fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXsxMn0kLyxcbiAgfTtcbiAgZGV2ZWxvcGVyTW9kZSA9IGZhbHNlO1xuICBnYSA9IHt9O1xuICBhcHBJbnNpZ2h0cyA9IHt9O1xuICBndG0gPSB7fTtcbiAgZ3N0ID0ge307XG59XG4iXX0=