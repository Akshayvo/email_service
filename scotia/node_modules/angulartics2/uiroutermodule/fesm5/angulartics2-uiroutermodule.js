import { Injectable, NgModule } from '@angular/core';
import { TransitionService } from '@uirouter/core';
import { Subject } from 'rxjs';
import { __spread } from 'tslib';
import { Angulartics2, Angulartics2OnModule, ANGULARTICS2_TOKEN, RouterlessTracking } from 'angulartics2';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Track Route changes for applications using UI-Router
 *
 * @link https://ui-router.github.io/ng2/docs/latest/
 *
 * referenced: https://github.com/ui-router/sample-app-angular/blob/9adb533b85c0f0fccef23968489cca0a5ec84654/src/app/util/ga.ts
 */
var UIRouterTracking = /** @class */ (function () {
    function UIRouterTracking(transitionService) {
        this.transitionService = transitionService;
    }
    /**
     * @param {?} trans
     * @return {?}
     */
    UIRouterTracking.prototype.path = /**
     * @param {?} trans
     * @return {?}
     */
    function (trans) {
        return trans.$to().url.format(trans.params());
    };
    /**
     * @param {?} settings
     * @return {?}
     */
    UIRouterTracking.prototype.trackLocation = /**
     * @param {?} settings
     * @return {?}
     */
    function (settings) {
        var _this = this;
        var /** @type {?} */ subject = new Subject();
        this.transitionService.onSuccess({}, function (trans) {
            return subject.next({ url: _this.path(trans) });
        }, {
            priority: -10000,
        });
        return subject;
    };
    /**
     * @param {?} url
     * @return {?}
     */
    UIRouterTracking.prototype.prepareExternalUrl = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        return url;
    };
    UIRouterTracking.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    UIRouterTracking.ctorParameters = function () { return [
        { type: TransitionService }
    ]; };
    return UIRouterTracking;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var Angulartics2UirouterModule = /** @class */ (function () {
    function Angulartics2UirouterModule() {
    }
    /**
     * @param {?} providers
     * @param {?=} settings
     * @return {?}
     */
    Angulartics2UirouterModule.forRoot = /**
     * @param {?} providers
     * @param {?=} settings
     * @return {?}
     */
    function (providers, settings) {
        if (settings === void 0) { settings = {}; }
        return {
            ngModule: Angulartics2UirouterModule,
            providers: __spread([
                { provide: ANGULARTICS2_TOKEN, useValue: { providers: providers, settings: settings } },
                Angulartics2,
                { provide: RouterlessTracking, useClass: UIRouterTracking }
            ], providers),
        };
    };
    Angulartics2UirouterModule.decorators = [
        { type: NgModule, args: [{
                    imports: [Angulartics2OnModule],
                },] }
    ];
    return Angulartics2UirouterModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { Angulartics2UirouterModule, UIRouterTracking };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcnRpY3MyLXVpcm91dGVybW9kdWxlLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9hbmd1bGFydGljczIvdWlyb3V0ZXJtb2R1bGUvdWlyb3V0ZXIudHMiLCJuZzovL2FuZ3VsYXJ0aWNzMi91aXJvdXRlcm1vZHVsZS91aXJvdXRlci5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJhbnNpdGlvbiwgVHJhbnNpdGlvblNlcnZpY2UgfSBmcm9tICdAdWlyb3V0ZXIvY29yZSc7XG5cbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgUm91dGVybGVzc1RyYWNraW5nLCBUcmFja05hdmlnYXRpb25FbmQgfSBmcm9tICdhbmd1bGFydGljczInO1xuXG4vKipcbiAqIFRyYWNrIFJvdXRlIGNoYW5nZXMgZm9yIGFwcGxpY2F0aW9ucyB1c2luZyBVSS1Sb3V0ZXJcbiAqXG4gKiBAbGluayBodHRwczovL3VpLXJvdXRlci5naXRodWIuaW8vbmcyL2RvY3MvbGF0ZXN0L1xuICpcbiAqIHJlZmVyZW5jZWQ6IGh0dHBzOi8vZ2l0aHViLmNvbS91aS1yb3V0ZXIvc2FtcGxlLWFwcC1hbmd1bGFyL2Jsb2IvOWFkYjUzM2I4NWMwZjBmY2NlZjIzOTY4NDg5Y2NhMGE1ZWM4NDY1NC9zcmMvYXBwL3V0aWwvZ2EudHNcbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFVJUm91dGVyVHJhY2tpbmcgaW1wbGVtZW50cyBSb3V0ZXJsZXNzVHJhY2tpbmcge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRyYW5zaXRpb25TZXJ2aWNlOiBUcmFuc2l0aW9uU2VydmljZSkge31cblxuICBwYXRoKHRyYW5zOiBUcmFuc2l0aW9uKSB7XG4gICAgcmV0dXJuIHRyYW5zLiR0bygpLnVybC5mb3JtYXQodHJhbnMucGFyYW1zKCkpO1xuICB9XG5cbiAgdHJhY2tMb2NhdGlvbihzZXR0aW5ncyk6IE9ic2VydmFibGU8VHJhY2tOYXZpZ2F0aW9uRW5kPiB7XG4gICAgY29uc3Qgc3ViamVjdCA9IG5ldyBTdWJqZWN0PFRyYWNrTmF2aWdhdGlvbkVuZD4oKTtcbiAgICB0aGlzLnRyYW5zaXRpb25TZXJ2aWNlLm9uU3VjY2VzcyhcbiAgICAgIHt9LFxuICAgICAgdHJhbnMgPT4ge1xuICAgICAgICByZXR1cm4gc3ViamVjdC5uZXh0KHsgdXJsOiB0aGlzLnBhdGgodHJhbnMpIH0pO1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcHJpb3JpdHk6IC0xMDAwMCxcbiAgICAgIH0sXG4gICAgKTtcbiAgICByZXR1cm4gc3ViamVjdDtcbiAgfVxuXG4gIHByZXBhcmVFeHRlcm5hbFVybCh1cmw6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxufVxuIiwiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7XG4gIEFuZ3VsYXJ0aWNzMixcbiAgQW5ndWxhcnRpY3MyT25Nb2R1bGUsXG4gIEFuZ3VsYXJ0aWNzMlNldHRpbmdzLFxuICBBTkdVTEFSVElDUzJfVE9LRU4sXG4gIFJvdXRlcmxlc3NUcmFja2luZyxcbn0gZnJvbSAnYW5ndWxhcnRpY3MyJztcbmltcG9ydCB7IFVJUm91dGVyVHJhY2tpbmcgfSBmcm9tICcuL3Vpcm91dGVyJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0FuZ3VsYXJ0aWNzMk9uTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgQW5ndWxhcnRpY3MyVWlyb3V0ZXJNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChcbiAgICBwcm92aWRlcnM6IFByb3ZpZGVyW10sXG4gICAgc2V0dGluZ3M6IFBhcnRpYWw8QW5ndWxhcnRpY3MyU2V0dGluZ3M+ID0ge30sXG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQW5ndWxhcnRpY3MyVWlyb3V0ZXJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgeyBwcm92aWRlOiBBTkdVTEFSVElDUzJfVE9LRU4sIHVzZVZhbHVlOiB7IHByb3ZpZGVycywgc2V0dGluZ3MgfSB9LFxuICAgICAgICBBbmd1bGFydGljczIsXG4gICAgICAgIHsgcHJvdmlkZTogUm91dGVybGVzc1RyYWNraW5nLCB1c2VDbGFzczogVUlSb3V0ZXJUcmFja2luZyB9LFxuICAgICAgICAuLi5wcm92aWRlcnMsXG4gICAgICBdLFxuICAgIH07XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7O0lBZ0JFLDBCQUFvQixpQkFBb0M7UUFBcEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtLQUFJOzs7OztJQUU1RCwrQkFBSTs7OztJQUFKLFVBQUssS0FBaUI7UUFDcEIsT0FBTyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztLQUMvQzs7Ozs7SUFFRCx3Q0FBYTs7OztJQUFiLFVBQWMsUUFBUTtRQUF0QixpQkFZQztRQVhDLHFCQUFNLE9BQU8sR0FBRyxJQUFJLE9BQU8sRUFBc0IsQ0FBQztRQUNsRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsU0FBUyxDQUM5QixFQUFFLEVBQ0YsVUFBQSxLQUFLO1lBQ0gsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ2hELEVBQ0Q7WUFDRSxRQUFRLEVBQUUsQ0FBQyxLQUFLO1NBQ2pCLENBQ0YsQ0FBQztRQUNGLE9BQU8sT0FBTyxDQUFDO0tBQ2hCOzs7OztJQUVELDZDQUFrQjs7OztJQUFsQixVQUFtQixHQUFXO1FBQzVCLE9BQU8sR0FBRyxDQUFDO0tBQ1o7O2dCQXhCRixVQUFVOzs7O2dCQWJVLGlCQUFpQjs7MkJBRHRDOzs7Ozs7Ozs7Ozs7Ozs7SUNlUyxrQ0FBTzs7Ozs7SUFBZCxVQUNFLFNBQXFCLEVBQ3JCLFFBQTRDO1FBQTVDLHlCQUFBLEVBQUEsYUFBNEM7UUFFNUMsT0FBTztZQUNMLFFBQVEsRUFBRSwwQkFBMEI7WUFDcEMsU0FBUztnQkFDUCxFQUFFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxRQUFRLEVBQUUsRUFBRSxTQUFTLFdBQUEsRUFBRSxRQUFRLFVBQUEsRUFBRSxFQUFFO2dCQUNsRSxZQUFZO2dCQUNaLEVBQUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRTtlQUN4RCxTQUFTLENBQ2I7U0FDRixDQUFDO0tBQ0g7O2dCQWpCRixRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUM7aUJBQ2hDOztxQ0FiRDs7Ozs7Ozs7Ozs7Ozs7OyJ9