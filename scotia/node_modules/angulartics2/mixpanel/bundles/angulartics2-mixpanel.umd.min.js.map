{"version":3,"sources":["ng://angulartics2/mixpanel/mixpanel.ts"],"names":["Angulartics2Mixpanel","angulartics2","_this","this","pageTrack","pipe","filterDeveloperMode","subscribe","x","path","eventTrack","action","properties","setUsername","setUserProperties","setUserPropertiesOnce","setSuperProperties","setSuperPropertiesOnce","setAlias","prototype","mixpanel","track","page","e","ReferenceError","userId","identify","people","set","set_once","register","register_once","alias","Injectable","Angulartics2"],"mappings":"iXAAA,IAAAA,EAAA,WASE,SAAAA,EACUC,GADV,IAAAC,EAAAC,KACUA,KAAAF,aAAAA,EAERE,KAAKF,aAAaG,UACfC,KAAKF,KAAKF,aAAaK,uBACvBC,UAAU,SAACC,GAAM,OAAAN,EAAKE,UAAUI,EAAEC,QACrCN,KAAKF,aAAaS,WACfL,KAAKF,KAAKF,aAAaK,uBACvBC,UAAU,SAACC,GAAM,OAAAN,EAAKQ,WAAWF,EAAEG,OAAQH,EAAEI,cAChDT,KAAKF,aAAaY,YACfN,UAAU,SAACC,GAAc,OAAAN,EAAKW,YAAYL,KAC7CL,KAAKF,aAAaa,kBACfP,UAAU,SAACC,GAAM,OAAAN,EAAKY,kBAAkBN,KAC3CL,KAAKF,aAAac,sBACfR,UAAU,SAACC,GAAM,OAAAN,EAAKa,sBAAsBP,KAC/CL,KAAKF,aAAae,mBACfT,UAAU,SAACC,GAAM,OAAAN,EAAKc,mBAAmBR,KAC5CL,KAAKF,aAAagB,uBACfV,UAAU,SAACC,GAAM,OAAAN,EAAKe,uBAAuBT,KAChDL,KAAKF,aAAaiB,SACfX,UAAU,SAACC,GAAM,OAAAN,EAAKgB,SAASV,YAGpCR,EAAAmB,UAAAf,UAAA,SAAUK,GACR,IACEW,SAASC,MAAM,cAAe,CAAEC,KAAMb,IACtC,MAAOc,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZvB,EAAAmB,UAAAT,WAAA,SAAWC,EAAgBC,GACzB,IACEQ,SAASC,MAAMV,EAAQC,GACvB,MAAOW,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZvB,EAAAmB,UAAAN,YAAA,SAAYY,GACV,IACEL,SAASM,SAASD,GAClB,MAAOF,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZvB,EAAAmB,UAAAL,kBAAA,SAAkBF,GAChB,IACEQ,SAASO,OAAOC,IAAIhB,GACpB,MAAOW,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZvB,EAAAmB,UAAAJ,sBAAA,SAAsBH,GACpB,IACEQ,SAASO,OAAOE,SAASjB,GACzB,MAAOW,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZvB,EAAAmB,UAAAH,mBAAA,SAAmBJ,GACjB,IACEQ,SAASU,SAASlB,GAClB,MAAOW,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZvB,EAAAmB,UAAAF,uBAAA,SAAuBL,GACrB,IACEQ,SAASW,cAAcnB,GACvB,MAAOW,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZvB,EAAAmB,UAAAD,SAAA,SAASc,GACP,IACEZ,SAASY,MAAMA,GACf,MAAOT,GACP,KAAMA,aAAaC,gBACjB,MAAMD,wBArGbU,EAAAA,sDAJQC,EAAAA,kBAFT","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var mixpanel: any;\n\n@Injectable()\nexport class Angulartics2Mixpanel {\n\n  constructor(\n    private angulartics2: Angulartics2\n  ) {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x) => this.setUserPropertiesOnce(x));\n    this.angulartics2.setSuperProperties\n      .subscribe((x) => this.setSuperProperties(x));\n    this.angulartics2.setSuperPropertiesOnce\n      .subscribe((x) => this.setSuperPropertiesOnce(x));\n    this.angulartics2.setAlias\n      .subscribe((x) => this.setAlias(x));\n  }\n\n  pageTrack(path: string) {\n    try {\n      mixpanel.track('Page Viewed', { page: path });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      mixpanel.track(action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string) {\n    try {\n      mixpanel.identify(userId);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      mixpanel.people.set(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserPropertiesOnce(properties: any) {\n    try {\n      mixpanel.people.set_once(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setSuperProperties(properties: any) {\n    try {\n      mixpanel.register(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setSuperPropertiesOnce(properties: any) {\n    try {\n      mixpanel.register_once(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setAlias(alias: any) {\n    try {\n      mixpanel.alias(alias);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n"]}