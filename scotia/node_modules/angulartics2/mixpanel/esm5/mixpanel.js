/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Angulartics2 } from 'angulartics2';
var Angulartics2Mixpanel = /** @class */ (function () {
    function Angulartics2Mixpanel(angulartics2) {
        var _this = this;
        this.angulartics2 = angulartics2;
        this.angulartics2.pageTrack
            .pipe(this.angulartics2.filterDeveloperMode())
            .subscribe(function (x) { return _this.pageTrack(x.path); });
        this.angulartics2.eventTrack
            .pipe(this.angulartics2.filterDeveloperMode())
            .subscribe(function (x) { return _this.eventTrack(x.action, x.properties); });
        this.angulartics2.setUsername
            .subscribe(function (x) { return _this.setUsername(x); });
        this.angulartics2.setUserProperties
            .subscribe(function (x) { return _this.setUserProperties(x); });
        this.angulartics2.setUserPropertiesOnce
            .subscribe(function (x) { return _this.setUserPropertiesOnce(x); });
        this.angulartics2.setSuperProperties
            .subscribe(function (x) { return _this.setSuperProperties(x); });
        this.angulartics2.setSuperPropertiesOnce
            .subscribe(function (x) { return _this.setSuperPropertiesOnce(x); });
        this.angulartics2.setAlias
            .subscribe(function (x) { return _this.setAlias(x); });
    }
    /**
     * @param {?} path
     * @return {?}
     */
    Angulartics2Mixpanel.prototype.pageTrack = /**
     * @param {?} path
     * @return {?}
     */
    function (path) {
        try {
            mixpanel.track('Page Viewed', { page: path });
        }
        catch (/** @type {?} */ e) {
            if (!(e instanceof ReferenceError)) {
                throw e;
            }
        }
    };
    /**
     * @param {?} action
     * @param {?} properties
     * @return {?}
     */
    Angulartics2Mixpanel.prototype.eventTrack = /**
     * @param {?} action
     * @param {?} properties
     * @return {?}
     */
    function (action, properties) {
        try {
            mixpanel.track(action, properties);
        }
        catch (/** @type {?} */ e) {
            if (!(e instanceof ReferenceError)) {
                throw e;
            }
        }
    };
    /**
     * @param {?} userId
     * @return {?}
     */
    Angulartics2Mixpanel.prototype.setUsername = /**
     * @param {?} userId
     * @return {?}
     */
    function (userId) {
        try {
            mixpanel.identify(userId);
        }
        catch (/** @type {?} */ e) {
            if (!(e instanceof ReferenceError)) {
                throw e;
            }
        }
    };
    /**
     * @param {?} properties
     * @return {?}
     */
    Angulartics2Mixpanel.prototype.setUserProperties = /**
     * @param {?} properties
     * @return {?}
     */
    function (properties) {
        try {
            mixpanel.people.set(properties);
        }
        catch (/** @type {?} */ e) {
            if (!(e instanceof ReferenceError)) {
                throw e;
            }
        }
    };
    /**
     * @param {?} properties
     * @return {?}
     */
    Angulartics2Mixpanel.prototype.setUserPropertiesOnce = /**
     * @param {?} properties
     * @return {?}
     */
    function (properties) {
        try {
            mixpanel.people.set_once(properties);
        }
        catch (/** @type {?} */ e) {
            if (!(e instanceof ReferenceError)) {
                throw e;
            }
        }
    };
    /**
     * @param {?} properties
     * @return {?}
     */
    Angulartics2Mixpanel.prototype.setSuperProperties = /**
     * @param {?} properties
     * @return {?}
     */
    function (properties) {
        try {
            mixpanel.register(properties);
        }
        catch (/** @type {?} */ e) {
            if (!(e instanceof ReferenceError)) {
                throw e;
            }
        }
    };
    /**
     * @param {?} properties
     * @return {?}
     */
    Angulartics2Mixpanel.prototype.setSuperPropertiesOnce = /**
     * @param {?} properties
     * @return {?}
     */
    function (properties) {
        try {
            mixpanel.register_once(properties);
        }
        catch (/** @type {?} */ e) {
            if (!(e instanceof ReferenceError)) {
                throw e;
            }
        }
    };
    /**
     * @param {?} alias
     * @return {?}
     */
    Angulartics2Mixpanel.prototype.setAlias = /**
     * @param {?} alias
     * @return {?}
     */
    function (alias) {
        try {
            mixpanel.alias(alias);
        }
        catch (/** @type {?} */ e) {
            if (!(e instanceof ReferenceError)) {
                throw e;
            }
        }
    };
    Angulartics2Mixpanel.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    Angulartics2Mixpanel.ctorParameters = function () { return [
        { type: Angulartics2 }
    ]; };
    return Angulartics2Mixpanel;
}());
export { Angulartics2Mixpanel };
function Angulartics2Mixpanel_tsickle_Closure_declarations() {
    /** @type {?} */
    Angulartics2Mixpanel.prototype.angulartics2;
}

//# sourceMappingURL=data:application/json;base64,